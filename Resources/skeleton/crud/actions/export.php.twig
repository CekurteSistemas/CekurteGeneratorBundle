
    /**
{% block phpdoc_method_header %}
     * Export all resources.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/export/{output}", defaults={"output"="xls"}, requirements={"output": "xls"}, name="{{ route_name_prefix }}_export")
     * @Method("GET")
     * @Secure(roles="ROLE_{{ bundle | slice(0, -6) | upper }}_{{ entity | upper }}, ROLE_ADMIN")
{% endif %}
{% endblock phpdoc_method_annotations %}
     *
     * @param Request $request
     * @return StreamedResponse|JsonResponse
     */
{% block method_definition %}
    public function exportAction(Request $request, $output)
{% endblock method_definition %}
    {
{% block method_body %}
        $queryBuilder = $this->getManager()->findResourcesByQueryString($request->query->all());

        $data = $this->getManager()->getResources($queryBuilder, true);

        $translator = $this->get('translator');

        $office = new PHPExcel(sprintf(
            '%s %s',
            $translator->trans('Report of'),
            $translator->trans('{{ entity }}')
        ));

        $office
            ->setHeader(array(
            {% for field in fields %}
    '{{ field.fieldName }}' => $translator->trans('{{ field.fieldName|capitalize }}'),
            {% endfor -%}
            ))
            ->setData($data['items'])
            ->build()
        ;
{% endblock method_body %}

{% block method_return %}
        return $this->getAcceptResponse($request) === 'html'
            ? $office->createResponse()
            : $office->createJsonResponse()
        ;
{% endblock method_return %}
    }
