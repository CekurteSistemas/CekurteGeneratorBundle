
    /**
{% block phpdoc_method_header %}
     * List all resources.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/", defaults={"page"=1, "limit"=10}, requirements={"page": "\d+", "limit": "\d+"}, name="{{ route_name_prefix }}")
     * @Method("GET")
     * @Template()
     * @Secure(roles="ROLE_{{ bundle | slice(0, -6) | upper }}_{{ entity | upper }}, ROLE_ADMIN")
{% endif %}
{% endblock phpdoc_method_annotations %}
     *
     * @param Request $request
     * @return array|JsonResponse
     */
{% block method_definition %}
    public function indexAction(Request $request)
{% endblock method_definition %}
    {
{% block method_body %}
        $queryBuilder = $this->getManager()->findResourcesByQueryString($request->query->all());

        $data = $this->getManager()->getPaginatedResources(
            $queryBuilder,
            $request->get('page'),
            $request->get('limit')
        );

        $searchForm = $this->createForm(new {{ entity }}SearchFormType(), null, array(
            'filters' => $request->get('filters')
        ));

        $response = $this->createResponse($data, $this->getAcceptResponse($request));

        if ($response instanceof JsonResponse) {
            return $response;
        }

        $response['search_form'] = $searchForm->createView();
        $response['delete_form'] = $this->createDeleteForm()->createView();
        $response['queries']     = $request->query->all();
        $response['limit']       = $request->get('limit');
{% endblock method_body %}

{% block method_return %}
{% if 'annotation' == format %}
        return $response;
{% else %}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:index.html.twig', $response);
{% endif %}
{% endblock method_return %}
    }
