
    /**
{% block phpdoc_method_header %}
     * Displays a form to edit an existing {{ entity }} entity.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/{id}/edit", name="{{ route_name_prefix }}_edit")
     * @Method("GET")
     * @Template()
     * @Secure(roles="ROLE_{{ bundle | upper }}_{{ entity | upper }}_UPDATE, ROLE_ADMIN")
{% endif %}
{% endblock phpdoc_method_annotations %}
     *
     * @param int $id
     * @return array|Response
{% include 'crud/actions/author.php.twig' %}
     */
{% block method_definition %}
    public function editAction($id)
{% endblock method_definition %}
    {
{% block method_body %}
        $entity = $this->getEntityRepository()->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find {{ entity }} entity.');
        }

        $editForm = $this->createForm(new {{ entity }}FormType(), $entity);
{% endblock method_body %}

{% block method_return %}
{% if 'annotation' == format %}
        return array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView(),
            'delete_form' => $this->createDeleteForm()->createView(),
            {%- for field in fields %}
                {%- if field.fieldName in ['picture', 'image', 'thumb', 'thumbnail', 'file', 'filename'] %}

            '{{ entity|lower ~ "_" ~ field.fieldName }}' => $editForm->get('{{ entity|lower ~ "_" ~ field.fieldName }}')->getData(),

                {%- endif %}
            {% endfor %}
        );
{% else %}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:edit.html.twig', array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView(),
            'delete_form' => $this->createDeleteForm()->createView(),
            {%- for field in fields %}
                {%- if field.fieldName in ['picture', 'image', 'thumb', 'thumbnail', 'file', 'filename'] %}

            '{{ entity|lower ~ "_" ~ field.fieldName }}' => $editForm->get('{{ entity|lower ~ "_" ~ field.fieldName }}')->getData(),

                {%- endif %}
            {% endfor %}
        ));
{% endif %}
{% endblock method_return %}
    }
